{
  "permissions": {
    "allow": [
      "Bash(git config:*)",
      "Bash(mkdir:*)",
      "Bash(git mv:*)",
      "Bash(cp:*)",
      "Bash(git add:*)",
      "Bash(git rm:*)",
      "Bash(rmdir:*)",
      "Bash(npm run build:*)",
      "Bash(git checkout:*)",
      "Bash(find:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\" head -20 \"$file\" echo \"\" done)",
      "Bash(1)",
      "Bash(git commit -m \"$(cat <<''EOF''\nRestructure codebase into domain-based architecture\n\n**New Structure:**\n- src/canvas/ - Canvas & workflow logic (nodes, executors, storage)\n- src/viewer/ - 3D viewer components and hooks\n- src/ui/ - All UI components (header, toolbar, dialogs, components)\n- src/lib/ - Shared utilities\n- src/hooks/ - Shared React hooks\n\n**Changes:**\n- Moved 145+ files to new locations\n- Updated all import paths throughout codebase\n- Deprecated src/canvas/nodes-louis/ (legacy nodes)\n- Fixed TypeScript errors in deprecated nodes\n- Updated CLAUDE.md with new architecture documentation\n- Build succeeds âœ“\n\n**Benefits:**\n- Clear domain separation (canvas, viewer, UI)\n- Better code organization and discoverability\n- Easier to understand project structure\n- Follows modern Next.js app architecture patterns\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(xargs:*)",
      "Bash(cat:*)",
      "Bash(git log:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nConsolidate node registry into single file\n\n**Problem:**\n- Node registration was fragmented across 6+ small files\n- node-factory.ts had only getNodeLabel function\n- node-categories.tsx mixed UI categories with metadata\n- Each node had separate factory.ts (19-35 lines each)\n- Unintuitive structure requiring 5 registration points\n\n**Solution:**\n- Created central node-registry.tsx consolidating:\n  - Node metadata (label, icon, status)\n  - Factory functions for all nodes\n  - Helper functions (getAllNodes, getNodeLabel, createNode)\n  - Special factories (createIfcNodeFromFile)\n\n**Changes:**\n- Remove fragmented files:\n  - canvas/node-factory.ts\n  - canvas/nodes/node-categories.tsx\n  - canvas/nodes/nodes/node-factory-registry.ts\n  - canvas/nodes/nodes/*/factory.ts (ifc, template, info)\n\n- Add canvas/nodes/node-registry.tsx (central registry)\n\n- Update all imports across:\n  - ui/toolbar/nodes-toolbar.tsx\n  - canvas/components/flow-canvas.tsx\n  - canvas/hooks/use-workflow-operations.ts\n  - canvas/hooks/use-flow-handlers.ts\n  - canvas/hooks/use-mobile-placement.ts\n\n- Fix TypeScript error in ifc-loader.ts (ArrayBuffer cast)\n\n- Update documentation:\n  - canvas/README.md - New structure and registration steps\n  - CLAUDE.md - Updated architecture overview\n\n**Benefits:**\n- Simpler: 6 files â†’ 1 central file\n- More intuitive: All node metadata in one place\n- Easier maintenance: New nodes need only 3 registration points\n- No artificial categorization: Toolbar shows flat list\n- Build succeeds âœ“\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(npm run lint)"
    ],
    "deny": [],
    "ask": []
  }
}
